"use strict"

// 1

// Функция выведет значение null, так как контекстом вызова для функции f был явно задан null при помощи метода bind.
// Это произошло потому, что в объекте user создано свойство g, которому присвоена связанная функция f.bind(null), то есть функция f,
// которая будет вызываться с контекстом null. Таким образом, при вызове user.g() функция f будет вызвана с контекстом null

// 2

// Нет, мы не можем изменить this дополнительным связыванием с помощью bind(). Метод bind() создает новую функцию, привязывая к ней указанный контекст this. 
// Каждый последующий вызов bind() привязывает новый контекст к предыдущему результату. При вызове f() выведется "Вася".

// 3

// Свойство функции не изменится после применения bind
// Свойство test не копируется при использовании bind.
// Поэтому, alert(bound.test) выведет undefined.

// 4

// Функции user.loginOk и user.loginFail вызываются в контексте askPassword, а не user.
// При этом this.name в них не определено и приводит к ошибке.

askPassword(user.loginOk.bind(user), user.loginFail.bind(user));

// 5

// Мы можем решить эту задачу, используя частично примененную функцию. 
// Чтобы передать функцию user.login как аргументы ok и fail, мы можем использовать метод bind для создания новых функций, в которых this будет связан с объектом user:

askPassword(user.login.bind(user, true), user.login.bind(user, false));


